Add employee info:

INSERT INTO Person (SSN, Last_Name, First_Name, Address, City, State, Zip_Code, Telephone, Email_Address)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);

Where each ? represents the appropriate field from the column list.

INSERT INTO Employee (SSN, Start_Date, Hourly_Rate, Manager)
VALUES (?, ?, ?, ?);

Where each ? represents the appropriate field from the column list, and the first ? is the same SSN used in the Person table.


Update employee info:

UPDATE Person
SET Last_Name=?, First_Name=?, Address=?, City=?, State=?, Zip_Code=?, Telephone=?, Email_Address=?
WHERE SSN=?;

UPDATE Employee
SET Start_Date=?, Hourly_Rate=?, Manager=?
WHERE SSN=?;

Where each ? represents the value to be assigned, and the last ? is the SSN of the Employee to update.


Delete Employee info:

DELETE FROM Person
WHERE SSN=?;

DELETE FROM Employee
WHERE SSN=?;

Where ? is the SSN of the Employee to be deleted (SSN must be used to delete from both tables).


Sales report for a particular month:

SELECT * FROM Purchase
WHERE Date LIKE '?-?-% %:%:%';

Where the first ? is the desired year, and the second ? is the desired month.

Produce a list of all items being advertised:

SELECT Item_Name FROM Advertisement;


Produce a list of transactions by item name:

SELECT * FROM Purchase
ORDER BY Item_Name;


Produce a list of transactions by customer name:

SELECT P.First_Name, P.Last_Name
FROM Person P, Purchase T, User U
WHERE T.User = U.User_Id AND U.SSN = P.SSN
ORDER BY P.Last_Name;


Produce a summary of revenue generated by a particular item:

SELECT A.Item_Name, A.Unit_Price*P.Number_Of_Units AS Revenue
FROM Advertisement A, Purchase P
WHERE P.Advertisement=? AND A.Advertisement_Id=?;

Where ? is the ID of the desired item.


Produce a summary of revenue generated by a particular item type:

SELECT A.Type, SUM(A.Unit_Price*P.Number_Of_Units) AS Revenue
FROM Advertisement A, Purchase P
WHERE A.Type=? AND A.Advertisement_Id=P.Advertisement
GROUP BY A.Type;

Where ? is the name of the desired item type.


Produce a summary of revenue generated by a particular customer:

SELECT P.Last_Name, P.First_Name, SUM(A.Unit_Price*T.Number_Of_Units) AS Revenue
FROM Person P, Advertisement A, Purchase T, User_Has_Account H, User U, 
WHERE T.Advertisement=A.Advertisement_Id AND T.Account=H.Account_Number AND H.User_Id=U.User_Id AND U.SSN=P.SSN
GROUP BY P.Last_Name, P.First_Name;


Determine which customer representative generated most total revenue:

CREATE VIEW Revenue(EmployeeSSN, TotalRevenue) AS
SELECT E.SSN, SUM(A.Unit_Price*P.Number_Of_Units) AS TotalRevenue
FROM Employee E, Advertisement A, Purchase P
WHERE E.SSN=A.Employee AND A.Advertisement_Id=P.Advertisement
GROUP BY E.SSN;

SELECT P.Last_Name, P.First_Name, MAX(R.TotalRevenue) AS TotalRevenue
FROM Person P, Revenue R
WHERE R.EmployeeSSN=P.SSN
GROUP BY P.Last_Name, P.First_Name;


Determine which customer generated the most total revenue:

CREATE VIEW CustomerRevenue(UserId, TotalRevenue) AS
SELECT P.User, SUM(A.Unit_Price*P.Number_Of_Units) AS TotalRevenue
FROM Purchase P, Advertisement A
WHERE P.Advertisement=A.Advertisement_Id
GROUP BY P.User;

SELECT P.Last_Name, P.First_Name, MAX(CR.TotalRevenue) AS TotalRevenue
FROM Person P, User U, CustomerRevenue CR
WHERE CR.UserId=U.User_Id AND U.SSN=P.SSN
GROUP BY P.Last_Name, P.First_Name;


Produce a list of most active items:

CREATE VIEW UnitsSold(Item_Name, TotalUnits) AS
SELECT A.Item_Name, SUM(P.Number_Of_Units) AS TotalUnits
FROM Advertisement A, Purchase P
WHERE A.Advertisement_Id=P.Advertisement
GROUP BY A.Item_Name;

SELECT * FROM UnitsSold
LIMIT 10;

Assuming most active means most number of units sold, returns top 10 selling items.


Produce a list of all customers who have purchased a particular item:

SELECT P.Last_Name, P.First_Name
FROM Person P, User U, Advertisement A, Purchase T
WHERE P.SSN=U.SSN AND U.User_Id=T.User AND T.Advertisement=A.Advertisement_Id AND A.Item_Name=?;

Where ? is the name of the desired item.


Produce a list of all items for a given company:

SELECT Item_Name
FROM Advertisement
WHERE Company=?;

Where ? is the name of the desired company.


Create an advertisement:

INSERT INTO Advertisement(Advertisement_Id, Employee, Type, Date, Company, Item_Name, Content, Unit_Price, Available_Unit)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);

Where each ? represents the appropriate field from the column list.


Delete an advertisement:

DELETE FROM Advertisement
WHERE Advertisement_Id=?;

Where ? represents the ID of the advertisement to be deleted.


Record a transaction:

INSERT INTO Purchase(Transaction_Id, Date, Advertisement, Number_Of_Units, Account, User)
VALUES (?, ?, ?, ?, ?, ?);

Where each ? represents the appropriate field from the column list.


Add customer info:

INSERT INTO Person (SSN, Last_Name, First_Name, Address, City, State, Zip_Code, Telephone, Email_Address)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);

Where each ? represents the appropriate field from the column list.

INSERT INTO User (SSN, User_Id, Account_Creation_Date, Rating)
VALUES (?, ?, ?, ?);

Where each ? represents the appropriate field from the column list, and the first ? is the same SSN used in the Person table.


Update customer info:

UPDATE Person
SET Last_Name=?, First_Name=?, Address=?, City=?, State=?, Zip_Code=?, Telephone=?, Email_Address=?
WHERE SSN=?;

UPDATE User
SET User_Id=?, Account_Creation_Date=?, Rating=?
WHERE SSN=?;

Where each ? represents the value to be assigned, and the last ? is the SSN of the User to update.


Delete customer info:

DELETE FROM Person
WHERE SSN=?;

DELETE FROM User
WHERE SSN=?;

Where ? is the SSN of the customer to be deleted (SSN must be used to delete from both tables).


Produce customer mailing list:

SELECT P.Email_Address
FROM Person P, User U
WHERE P.SSN=U.SSN;

Making sure we only get users, not employees.


Produce a list of item suggestions for a given customer:

CREATE VIEW PastTransactionTypes(UserId, Type) AS
SELECT U.UserId, A.Type
FROM User U, Advertisement A, Purchase P
WHERE U.User_Id=P.User AND P.Advertisement=A.Advertisement_Id;

SELECT A.Item_Name
FROM Advertisement A, PastTransactionTypes P
WHERE P.UserId=? AND P.Type=A.Type;

Where ? is the ID of the desired user.


Create a circle:

INSERT INTO Circle(Circle_Id, Circle_NAME, Owner_Of_Circle, Type)
VALUES (?, ?, ?, ?);

Where each ? represents the appropriate field from the column list.